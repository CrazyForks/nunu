import{_ as e,c as t,o as n,a4 as a,m as s,a as i}from"./chunks/framework.DZjeu1b3.js";const C=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md","lastUpdated":1711899770000}'),l={name:"getting-started.md"},p=a(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><h2 id="install" tabindex="-1">安装Nunu <a class="header-anchor" href="#install" aria-label="Permalink to &quot;安装Nunu {#install}&quot;">​</a></h2><p>您可以通过以下命令安装 Nunu：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/go-nunu/nunu@latest</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>国内用户可以使用<code>GOPROXY</code>加速<code>go install</code></p></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GO111MODULE=on</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.cn,direct</span></span></code></pre></div><details class="details custom-block"><summary>如果<code>go install</code>成功，却提示找不到nunu命令？</summary><p>这是因为环境变量没有配置，可以把 GOBIN 目录配置到环境变量中即可，GOBIN的配置方法windows、macOS、Linux各不相同，请自行网络搜索。</p></details>`,7),o=s("h2",{new:"",id:"创建新项目",tabindex:"-1"},[i("创建新项目 "),s("a",{class:"header-anchor",href:"#创建新项目","aria-label":'Permalink to "创建新项目{new}"'},"​")],-1),d=a('<div class="tip custom-block"><p class="custom-block-title">在创建项目之前，我们需要了解到Nunu内置了两种类型的Layout：</p><ul><li><p><strong>基础模板(Basic Layout)</strong></p><p><code>Basic Layout</code> 包含一个<strong>非常精简</strong>的架构目录结构，适合非常熟悉Nunu项目的开发者使用。</p></li><li><p><strong>高级模板(Advanced Layout)</strong></p><p><code>Advanced Layout</code> 包含了很多<code>Nunu</code>的用法示例（ <code>db</code>、<code>redis</code>、 <code>jwt</code>、 <code>cron</code>、 <code>migration</code>等），适合开发者快速学习了解Nunu的架构思想。</p></li></ul></div><p>您可以使用以下命令创建一个新的 <code>Golang</code> 项目，推荐选择<code>Advanced Layout</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nunu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> projectName</span></span></code></pre></div><p>此命令将创建一个名为 <code>projectName</code> 的目录，并在其中生成一个优雅的 Golang 项目结构。</p><p><strong>国内加速源：</strong></p><p><code>nunu new</code>默认拉取github源，你也可以使用国内加速仓库</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xcxhr" id="tab-9ZJCAI8" checked="checked"><label for="tab-9ZJCAI8">使用高级模板(推荐)</label><input type="radio" name="group-xcxhr" id="tab-dk13n5t"><label for="tab-dk13n5t">使用基础模板</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nunu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> projectName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/go-nunu/nunu-layout-advanced.git</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nunu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> projectName</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/go-nunu/nunu-layout-basic.git</span></span></code></pre></div></div></div>',7),h=s("h2",{run:"",id:"启动服务",tabindex:"-1"},[i("启动服务 "),s("a",{class:"header-anchor",href:"#启动服务","aria-label":'Permalink to "启动服务{run}"'},"​")],-1),c=a('<p>创建好项目之后，我们进入项目执行<code>nunu run</code>命令即可启动服务。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nunu run cmd/server/main.go</span></span></code></pre></div><p>随后打开浏览器访问<code>http://localhost:8080</code>即可看到欢迎页面。</p><p>API文档地址: <code>http://127.0.0.1:8000/swagger/index.html</code></p>',4),r=[p,o,d,h,c];function k(u,g,F,_,b,v){return n(),t("div",null,r)}const m=e(l,[["render",k]]);export{C as __pageData,m as default};
