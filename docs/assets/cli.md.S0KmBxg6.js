import{_ as a,c as s,o as e,a4 as i}from"./chunks/framework.DZjeu1b3.js";const k=JSON.parse('{"title":"nunu命令行工具","description":"","frontmatter":{},"headers":[],"relativePath":"cli.md","filePath":"cli.md","lastUpdated":1711899770000}'),t={name:"cli.md"},n=i('<h1 id="info" tabindex="-1">nunu命令行工具 <a class="header-anchor" href="#info" aria-label="Permalink to &quot;nunu命令行工具 {#info}&quot;">​</a></h1><p>nunu 命令行工具是一个为了协助快速开发 Golang 项目而创建的项目，通过 nunu 命令行工具， 您可以很容易的进行 Golang 项目的创建、热编译、开发、测试、和部署。</p><h2 id="new" tabindex="-1">创建项目 <a class="header-anchor" href="#new" aria-label="Permalink to &quot;创建项目 {#new}&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nunu new [projectName]</span></span></code></pre></div><h2 id="run" tabindex="-1">启动项目 <a class="header-anchor" href="#run" aria-label="Permalink to &quot;启动项目 {#run}&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nunu run</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>通常情况下，nunu run 命令仅用于本地开发环境快速热编译运行使用。如果是生产环境，请使用 <code>go build</code>之后部署。</p></div><h2 id="create" tabindex="-1">创建组件 <a class="header-anchor" href="#create" aria-label="Permalink to &quot;创建组件 {#create}&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nunu create [type] [handler-name]</span></span></code></pre></div><p>详细命令：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-6XVJJ" id="tab-V-sE0c1" checked="checked"><label for="tab-V-sE0c1">创建Handler</label><input type="radio" name="group-6XVJJ" id="tab--aUQWMQ"><label for="tab--aUQWMQ">创建Service</label><input type="radio" name="group-6XVJJ" id="tab-Rgs-Y4W"><label for="tab-Rgs-Y4W">创建Repository</label><input type="radio" name="group-6XVJJ" id="tab-nxPJcBQ"><label for="tab-nxPJcBQ">创建Model</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nunu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [handler-name]</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nunu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [service-name]</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nunu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  repository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [repository-name]</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nunu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [model-name]</span></span></code></pre></div></div></div><p>如果你觉得每种组件单独创建太麻烦，你可以使用 <code>nunu create all</code> 创建所有组件。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nunu create all [name]</span></span></code></pre></div><h2 id="waire" tabindex="-1">编译wire <a class="header-anchor" href="#waire" aria-label="Permalink to &quot;编译wire {#waire}&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nunu wire all</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果你的项目存在多个<code>wire.go</code>文件，而你只想编译指定的<code>wire.go</code>文件，你可以使用 <code>nunu wire</code>，然后自己选择对应的文件编译。</p></div><h2 id="upgrade" tabindex="-1">版本升级 <a class="header-anchor" href="#upgrade" aria-label="Permalink to &quot;版本升级 {#upgrade}&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nunu upgrade</span></span></code></pre></div>',18),l=[n];function p(o,c,d,h,r,u){return e(),s("div",null,l)}const b=a(t,[["render",p]]);export{k as __pageData,b as default};
